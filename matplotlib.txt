Hi Team,

Appreciate if someone can advise me on this :

These include the result files; the heritibitly score is o,  but the Q Q plot is siginificant. This contradicts itself or shouldn't be taken into account for more analysis.
why the heritibility score is 0

1. SNP and COG association with fixed effects model
Read 602 phenotypes
Detected binary phenotype
Structure matrix has dimension (602, 602)
Analysing 602 samples found in both phenotype and structure matrix
4701 loaded variants
2902 pre-filtered variants
1799 tested variants
1799 printed variants

2.  K-mer association with mixed effects model
Read 602 phenotypesDetected binary phenotypeSetting up LMMSimilarity matrix has dimension (602, 602)
Analysing 602 samples found in both phenotype and similarity matrix h^2 = 0.00
91704889 loaded variants
5125486 pre-filtered variants
86579403 tested variants
86579403 printed variant
(Patterns:       83884146
Threshold:      5.96E-10 )

Q-Q plot





import matplotlib.pyplot as plt

x = [1, 2, 3, 4, 5]
y = [1, 4, 9, 16, 25]

plt.plot(x, y)
plt.show()

==========================
import pandas as pd
import matplotlib.pyplot as plt

# Read data from penicillin_snps.plot
data = pd.read_csv('penicillin_snps.plot', sep='\t')

# Plotting Manhattan plot
plt.figure(figsize=(10, 6))
plt.scatter(data['BP'], data['log10(p)'], color='blue', s=10)
plt.axhline(y=-math.log10(0.05), color='red', linestyle='dashed', linewidth=1)  # significance line
plt.xlabel('Genomic position')
plt.ylabel('-log10(p-value)')
plt.title('Manhattan Plot')
plt.show()
=========================
pip install pandas matplotlib
import pandas as pd
import matplotlib.pyplot as plt

# Replace 'output.csv' with the path to your Pyseer output file
data = pd.read_csv('output.csv')


# Convert p-values to -log10(p-value) to enhance visibility on the plot
data['-log10(pvalue)'] = -np.log10(data['pvalue'])

# Create a new column 'chr' if your data includes chromosome or contig information
# For simplicity, this example assumes all data belongs to the same chromosome
data['chr'] = 'chr1'

# Plotting
fig, ax = plt.subplots(figsize=(10, 6))
ax.scatter(data['position'], data['-log10(pvalue)'], color='blue', s=10)  # s is the marker size
ax.set_xlabel('Genomic position')
ax.set_ylabel('-log10(p-value)')
ax.set_title('Manhattan Plot')
plt.axhline(y=-np.log10(0.05), color='red', linestyle='dashed', linewidth=1)  # significance line
plt.show()

# Assuming 'chr' is a column in your DataFrame
chromosomes = sorted(data['chr'].unique())
colors = ['red', 'blue', 'green', 'purple'] * (len(chromosomes) // 4 + 1)

for i, chrom in enumerate(chromosomes):
    chrom_data = data[data['chr'] == chrom]
    plt.scatter(chrom_data['position'], chrom_data['-log10(pvalue)'], color=colors[i], s=10, label=chrom)

plt.xlabel('Genomic position')
plt.ylabel('-log10(p-value)')
plt.title('Manhattan Plot Across Chromosomes')
plt.axhline(y=-np.log10(0.05), color='red', linestyle='dashed', linewidth=1)  # significance line
plt.legend(title='Chromosome')
plt.show()
